name: Build and push docker image to Docker Hub

on: [ workflow_dispatch ]

jobs:

  build:

    runs-on: ubuntu-latest
      
    steps:
    - name: Check Out Repo 
      uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      
      # See https://docs.docker.com/engine/reference/commandline/buildx_build/
      # And https://evilmartians.com/chronicles/build-images-on-github-actions-with-docker-layer-caching
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-multi-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-multi-buildx

    - name: Build to test
      id: docker_build_to_test
      uses: docker/build-push-action@v2
      with:
        context: ./test_python_example
        file: ./test_python_example/Dockerfile
        target: test
        push: false
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
      
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./test_python_example
        file: ./test_python_example/Dockerfile
        target: app
        push: true
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new. # mode=max means export layers from all stage to cache
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/test_python_example:latest

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
      
      # This apparently prevents the cache from growing in size forever
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
